{
    // ----------------------------------------
    // JavaScript / TypeScript
    // ----------------------------------------
    // print to console
    "Print to console": {
        "scope": "javascript,typescript",
        "prefix": "lll",
        "body": ["console.log($1);"],
        "description": "Log output to console"
    },
    "Return": {
        "scope": "javascript,typescript",
        "prefix": "rt",
        "body": ["return $1;"],
        "description": "create a return"
    },
    "reactComponent": {
        "prefix": "rfc",
        "scope": "javascript,typescript,javascriptreact",
        "body": [
            "function ${1:${TM_FILENAME_BASE}}() {",
            "\treturn (",
            "\t\t<div>",
            "\t\t\t$0",
            "\t\t</div>",
            "\t)",
            "}",
            "",
            "export default ${1:${TM_FILENAME_BASE}}",
            ""
        ],
        "description": "React component"
    },
    "reactStyledComponent": {
        "prefix": "rsc",
        "scope": "javascript,typescript,javascriptreact",
        "body": [
            "import styled from 'styled-components'",
            "",
            "const Styled${TM_FILENAME_BASE} = styled.$0``",
            "",
            "function ${TM_FILENAME_BASE}() {",
            "\treturn (",
            "\t\t<Styled${TM_FILENAME_BASE}>",
            "\t\t\t${TM_FILENAME_BASE}",
            "\t\t</Styled${TM_FILENAME_BASE}>",
            "\t)",
            "}",
            "",
            "export default ${TM_FILENAME_BASE}",
            ""
        ],
        "description": "React styled component"
    },
    "create a canvas": {
        "scope": "javascript, typescript",
        "prefix": "gamecanvas",
        "body": [
            "/** @type {HTMLCanvasElement} */",
            "const canvas = document.getElementById('gameCanvas');",
            "const ctx = canvas.getContext('2d');"
        ],
        "description": "create a new canvas element with intellisense type declared"
    },
    "create a socketio server": {
        "scope": "javascript, typescript",
        "prefix": "sockserve",
        "body": [
            "const express = require('express');",
            "const app = express();",
            "const { Server } = require('socket.io');",
            "",
            "app.use(express.static(__dirname + '/public'));",
            "",
            "const expressServer = app.listen(8000);",
            "",
            "const io = new Server(expressServer, {",
            " cors: {",
            "   origin: '*',",
            " },",
            "});",
            "",
            "io.on('', () => {});"
        ]
    },

    // ----------------------------------------
    // Golang
    // ----------------------------------------
    "go boilerplate": {
        "scope": "golang, go",
        "prefix": "gfg",
        "body": [
            "package main",
            "\nimport \"fmt\"",
            "\nfunc main() {",
            "\tfmt.Println(\"Hello from Golang!\")",
            "}"
        ],
        "description": "go main file boilerplate"
    },
    "go log println": {
        "scope": "golang, go",
        "prefix": "lp",
        "body": ["log.Println($1)"],
        "description": "go log println shortcut"
    }
}
